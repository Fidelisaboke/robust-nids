name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ----------------------
  # Backend (FastAPI) Lint & Format
  # ----------------------
  backend-lint:
    name: Backend Lint and Format
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: pipx install uv

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: backend/.venv
          key: ${{ runner.os }}-uv-${{ hashFiles('backend/uv.lock') }}

      - name: Sync dependencies
        run: uv sync --extra dev

      - name: Run Ruff lint & format checks
        run: uv run ruff check .

  # ----------------------
  # Backend (FastAPI) Tests
  # ----------------------
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    needs: backend-lint
    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]
    defaults:
      run:
        working-directory: backend

    # PostgreSQL service for tests
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: nids_db_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pipx install uv

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: backend/.venv
          key: ${{ runner.os }}-uv-${{ hashFiles('backend/uv.lock') }}

      - name: Sync dependencies
        run: uv sync --extra dev --extra test

      - name: Load .env.test file
        run: |
          if [ -f ../.env.test ]; then
            echo "Loading environment variables from .env.test"
            grep -vE '^\s*(#|$)' ../.env.test >> $GITHUB_ENV
            echo "Environment variables loaded successfully."
          else
            echo ".env.test file not found!"
            exit 1
          fi

      - name: Run tests with coverage
        env:
          PYTHONPATH: ${{ github.workspace }}/backend
        run: uv run pytest -v --cov=. --cov-report=xml

      - name: Display coverage summary
        if: success()
        run: uv run coverage report -m >> $GITHUB_STEP_SUMMARY

  # ----------------------
  # Frontend (Next.js) Lint & Build
  # ----------------------
  frontend:
    name: Frontend Lint & Build
    runs-on: ubuntu-latest
    needs: [backend-lint, backend-test]
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Build Next.js app
        run: npm run build
