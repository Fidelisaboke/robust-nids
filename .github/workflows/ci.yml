name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ----------------------
  # Backend (FastAPI) checks
  # ----------------------
  backend-lint:
    name: Backend Lint and Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff lint & format checks
        run: |
          # Lint and fail on errors
          ruff check backend --exit-zero=false

  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-cov

      - name: Run tests with coverage
        env:
          PYTHONPATH: ${{ github.workspace }}/backend/
        run: pytest -v --cov-report=xml backend/tests/

      - name: Display coverage in GitHub summary
        if: success()
        run: |
          coverage report -m >> $GITHUB_STEP_SUMMARY

  # ----------------------
  # Frontend (Next.js) checks
  # ----------------------
  frontend:
    name: Frontend Lint & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint

      - name: Build Next.js app
        working-directory: frontend
        run: npm run build
